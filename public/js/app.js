/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/app.js":
/*!*****************************!*\
  !*** ./resources/js/app.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\r\n * First we will load all of this project's JavaScript dependencies which\r\n * includes Vue and other libraries. It is a great starting point when\r\n * building robust, powerful web applications using Vue and Laravel.\r\n */\n// require('./bootstrap');\n// window.Vue = require('vue');\n\n/**\r\n * The following block of code may be used to automatically register your\r\n * Vue components. It will recursively scan this directory for the Vue\r\n * components and automatically register them with their \"basename\".\r\n *\r\n * Eg. ./components/ExampleComponent.vue -> <example-component></example-component>\r\n */\n// const files = require.context('./', true, /\\.vue$/i);\n// files.keys().map(key => Vue.component(key.split('/').pop().split('.')[0], files(key).default));\n// Vue.component('example-component', require('./components/ExampleComponent.vue').default);\n\n/**\r\n * Next, we will create a fresh Vue application instance and attach it to\r\n * the page. Then, you may begin adding components to this application\r\n * or customize the JavaScript scaffolding to fit your unique needs.\r\n */\n// const app = new Vue({\n//     el: '#app',\n// });\n$(\"#topBtn\").click(function () {\n  $('html, body').animate({\n    scrollTop: 0\n  }, 800);\n});\n\n(function ($) {\n  // 本函数每次调用只负责一个轮播图的功能\n  // 也就是说只会产生一个轮播图，这个函数的作用域只能分配给一个轮播图\n  // 要求在调用本函数的时候务必把当前轮播图的根标签传递过来\n  // 这里的形参 ele 就是某个轮播的根标签\n  var slide = function slide(ele, options) {\n    var $ele = $(ele); // 默认设置选项\n\n    var setting = {\n      // 控制轮播的动画时间\n      speed: 1500,\n      // 控制 interval 的时间 (轮播速度)\n      interval: 5000\n    }; // 对象合并\n\n    $.extend(true, setting, options); // 规定好每张图片处于的位置和状态\n\n    var states = [{\n      $zIndex: 1,\n      width: 120,\n      height: 150,\n      top: 69,\n      left: 134,\n      $opacity: 0.2\n    }, {\n      $zIndex: 2,\n      width: 200,\n      height: 250,\n      top: 33,\n      left: -13,\n      $opacity: 0.4\n    }, {\n      $zIndex: 3,\n      width: 200,\n      height: 295,\n      top: 13,\n      left: 125,\n      $opacity: 0.7\n    }, {\n      $zIndex: 4,\n      width: 224,\n      height: 320,\n      top: 0,\n      left: 263,\n      $opacity: 1\n    }, {\n      $zIndex: 3,\n      width: 200,\n      height: 295,\n      top: 13,\n      left: 430,\n      $opacity: 0.7\n    }, {\n      $zIndex: 2,\n      width: 200,\n      height: 250,\n      top: 33,\n      left: 573,\n      $opacity: 0.4\n    }, {\n      $zIndex: 1,\n      width: 120,\n      height: 150,\n      top: 69,\n      left: 500,\n      $opacity: 0.2\n    }];\n    var $lis = $ele.find('li');\n    var timer = null; // 事件\n\n    $ele.find('.hi-next').on('click', function () {\n      next();\n    });\n    $ele.find('.hi-prev').on('click', function () {\n      states.push(states.shift());\n      move();\n    });\n    $ele.on('mouseenter', function () {\n      clearInterval(timer);\n      timer = null;\n    }).on('mouseleave', function () {\n      autoPlay();\n      console.log(\"Hello\");\n    });\n    move();\n    autoPlay(); // 让每个 li 对应上面 states 的每个状态\n    // 让 li 从正中间展开\n\n    function move() {\n      $lis.each(function (index, element) {\n        var state = states[index];\n        $(element).css('zIndex', state.$zIndex).finish().animate(state, setting.speed).find('img').css('opacity', state.$opacity);\n      });\n    } // 切换到下一张\n\n\n    function next() {\n      // 原理：把数组最后一个元素移到第一个\n      states.unshift(states.pop());\n      move();\n    }\n\n    function autoPlay() {\n      timer = setInterval(next, setting.interval);\n    }\n  }; // 找到要轮播的轮播图的根标签，调用 slide()\n\n\n  $.fn.hiSlide = function (options) {\n    $(this).each(function (index, ele) {\n      slide(ele, options);\n    }); // 返回值，以便支持链式调用\n\n    return this;\n  };\n})(jQuery);\n\n(function ($) {\n  console.log(\"I am Working!\"); // for ie9 doesn't support debug console >>>\n\n  if (!window.console) window.console = {};\n  if (!window.console.log) window.console.log = function () {}; // ^^^\n\n  $.fn.euCookieLawPopup = function () {\n    var _self = this; ///////////////////////////////////////////////////////////////////////////////////////////////\n    // PARAMETERS (MODIFY THIS PART) //////////////////////////////////////////////////////////////\n\n\n    _self.params = {\n      cookiePolicyUrl: '/?privacy',\n      popupPosition: 'top',\n      colorStyle: 'default',\n      compactStyle: false,\n      popupTitle: 'This website is using cookies',\n      popupText: '{{ trans(\\'msg.europop_up\\') }}',\n      buttonContinueTitle: 'Continue',\n      buttonLearnmoreTitle: 'Learn&nbsp;more',\n      buttonLearnmoreOpenInNewWindow: true,\n      agreementExpiresInDays: 30,\n      autoAcceptCookiePolicy: false,\n      htmlMarkup: null\n    }; ///////////////////////////////////////////////////////////////////////////////////////////////\n    // VARIABLES USED BY THE FUNCTION (DON'T MODIFY THIS PART) ////////////////////////////////////\n\n    _self.vars = {\n      INITIALISED: false,\n      HTML_MARKUP: null,\n      COOKIE_NAME: 'EU_COOKIE_LAW_CONSENT'\n    }; ///////////////////////////////////////////////////////////////////////////////////////////////\n    // PRIVATE FUNCTIONS FOR MANIPULATING DATA ////////////////////////////////////////////////////\n    // Overwrite default parameters if any of those is present\n\n    var parseParameters = function parseParameters(object, markup, settings) {\n      if (object) {\n        var className = $(object).attr('class') ? $(object).attr('class') : '';\n\n        if (className.indexOf('eupopup-top') > -1) {\n          _self.params.popupPosition = 'top';\n        } else if (className.indexOf('eupopup-fixedtop') > -1) {\n          _self.params.popupPosition = 'fixedtop';\n        } else if (className.indexOf('eupopup-bottomright') > -1) {\n          _self.params.popupPosition = 'bottomright';\n        } else if (className.indexOf('eupopup-bottomleft') > -1) {\n          _self.params.popupPosition = 'bottomleft';\n        } else if (className.indexOf('eupopup-bottom') > -1) {\n          _self.params.popupPosition = 'bottom';\n        } else if (className.indexOf('eupopup-block') > -1) {\n          _self.params.popupPosition = 'block';\n        }\n\n        if (className.indexOf('eupopup-color-default') > -1) {\n          _self.params.colorStyle = 'default';\n        } else if (className.indexOf('eupopup-color-inverse') > -1) {\n          _self.params.colorStyle = 'inverse';\n        }\n\n        if (className.indexOf('eupopup-style-compact') > -1) {\n          _self.params.compactStyle = true;\n        }\n      }\n\n      if (markup) {\n        _self.params.htmlMarkup = markup;\n      }\n\n      if (settings) {\n        if (typeof settings.cookiePolicyUrl !== 'undefined') {\n          _self.params.cookiePolicyUrl = settings.cookiePolicyUrl;\n        }\n\n        if (typeof settings.popupPosition !== 'undefined') {\n          _self.params.popupPosition = settings.popupPosition;\n        }\n\n        if (typeof settings.colorStyle !== 'undefined') {\n          _self.params.colorStyle = settings.colorStyle;\n        }\n\n        if (typeof settings.popupTitle !== 'undefined') {\n          _self.params.popupTitle = settings.popupTitle;\n        }\n\n        if (typeof settings.popupText !== 'undefined') {\n          _self.params.popupText = settings.popupText;\n        }\n\n        if (typeof settings.buttonContinueTitle !== 'undefined') {\n          _self.params.buttonContinueTitle = settings.buttonContinueTitle;\n        }\n\n        if (typeof settings.buttonLearnmoreTitle !== 'undefined') {\n          _self.params.buttonLearnmoreTitle = settings.buttonLearnmoreTitle;\n        }\n\n        if (typeof settings.buttonLearnmoreOpenInNewWindow !== 'undefined') {\n          _self.params.buttonLearnmoreOpenInNewWindow = settings.buttonLearnmoreOpenInNewWindow;\n        }\n\n        if (typeof settings.agreementExpiresInDays !== 'undefined') {\n          _self.params.agreementExpiresInDays = settings.agreementExpiresInDays;\n        }\n\n        if (typeof settings.autoAcceptCookiePolicy !== 'undefined') {\n          _self.params.autoAcceptCookiePolicy = settings.autoAcceptCookiePolicy;\n        }\n\n        if (typeof settings.htmlMarkup !== 'undefined') {\n          _self.params.htmlMarkup = settings.htmlMarkup;\n        }\n      }\n    };\n\n    var createHtmlMarkup = function createHtmlMarkup() {\n      if (_self.params.htmlMarkup) {\n        return _self.params.htmlMarkup;\n      }\n\n      var html = '<div class=\"eupopup-container' + ' eupopup-container-' + _self.params.popupPosition + (_self.params.compactStyle ? ' eupopup-style-compact' : '') + ' eupopup-color-' + _self.params.colorStyle + '\">' + '<div class=\"eupopup-head\">' + _self.params.popupTitle + '</div>' + '<div class=\"eupopup-body\">' + _self.params.popupText + '</div>' + '<div class=\"eupopup-buttons\">' + '<a href=\"#\" class=\"eupopup-button eupopup-button_1 btn btn-BAL\">' + _self.params.buttonContinueTitle + '</a>' + '<a href=\"' + _self.params.cookiePolicyUrl + '\"' + (_self.params.buttonLearnmoreOpenInNewWindow ? ' target=_blank ' : '') + ' class=\"eupopup-button eupopup-button_2 btn btn-BAL\">' + _self.params.buttonLearnmoreTitle + '</a>' + '<div class=\"clearfix\"></div>' + '</div>' + '<a href=\"#\" class=\"eupopup-closebutton\">x</a>' + '</div>';\n      return html;\n    }; // Storing the consent in a cookie\n\n\n    var setUserAcceptsCookies = function setUserAcceptsCookies(consent) {\n      var d = new Date();\n      var expiresInDays = _self.params.agreementExpiresInDays * 24 * 60 * 60 * 1000;\n      d.setTime(d.getTime() + expiresInDays);\n      var expires = \"expires=\" + d.toGMTString();\n      document.cookie = _self.vars.COOKIE_NAME + '=' + consent + \"; \" + expires + \";path=/\";\n      $(document).trigger(\"user_cookie_consent_changed\", {\n        'consent': consent\n      });\n    }; // Let's see if we have a consent cookie already\n\n\n    var userAlreadyAcceptedCookies = function userAlreadyAcceptedCookies() {\n      var userAcceptedCookies = false;\n      var cookies = document.cookie.split(\";\");\n\n      for (var i = 0; i < cookies.length; i++) {\n        var c = cookies[i].trim();\n\n        if (c.indexOf(_self.vars.COOKIE_NAME) == 0) {\n          userAcceptedCookies = c.substring(_self.vars.COOKIE_NAME.length + 1, c.length);\n        }\n      }\n\n      return userAcceptedCookies;\n    };\n\n    var hideContainer = function hideContainer() {\n      // $('.eupopup-container').slideUp(200);\n      $('.eupopup-container').animate({\n        opacity: 0,\n        height: 0\n      }, 200, function () {\n        $('.eupopup-container').hide(0);\n      });\n    }; ///////////////////////////////////////////////////////////////////////////////////////////////\n    // PUBLIC FUNCTIONS  //////////////////////////////////////////////////////////////////////////\n\n\n    var publicfunc = {\n      // INITIALIZE EU COOKIE LAW POPUP /////////////////////////////////////////////////////////\n      init: function init(settings) {\n        parseParameters($(\".eupopup\").first(), $(\".eupopup-markup\").html(), settings); // No need to display this if user already accepted the policy\n\n        if (userAlreadyAcceptedCookies()) {\n          $(document).trigger(\"user_cookie_already_accepted\", {\n            'consent': true\n          });\n          return;\n        } // We should initialise only once\n\n\n        if (_self.vars.INITIALISED) {\n          return;\n        }\n\n        _self.vars.INITIALISED = true; // Markup and event listeners >>>\n\n        _self.vars.HTML_MARKUP = createHtmlMarkup();\n\n        if ($('.eupopup-block').length > 0) {\n          $('.eupopup-block').append(_self.vars.HTML_MARKUP);\n        } else {\n          $('BODY').append(_self.vars.HTML_MARKUP);\n        }\n\n        $('.eupopup-button_1').click(function () {\n          setUserAcceptsCookies(true);\n          hideContainer();\n          console.log('1');\n          return false;\n        });\n        $('.eupopup-closebutton').click(function () {\n          setUserAcceptsCookies(true);\n          hideContainer();\n          return false;\n        }); // ^^^ Markup and event listeners\n        // Ready to start!\n\n        $('.eupopup-container').show(); // In case it's alright to just display the message once\n\n        if (_self.params.autoAcceptCookiePolicy) {\n          setUserAcceptsCookies(true);\n        }\n      }\n    };\n    return publicfunc;\n  };\n\n  $(document).ready(function () {});\n  $(document).bind(\"user_cookie_consent_changed\", function (event, object) {\n    console.log(\"User cookie consent changed: \" + $(object).attr('consent'));\n  });\n})(jQuery);\n\n$(function () {\n  $('[data-toggle=\"tooltip\"]').tooltip();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/app.js\n");

/***/ }),

/***/ 1:
/*!***********************************!*\
  !*** multi ./resources/js/app.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! C:\xampp\htdocs\BAL_Landing\resources\js\app.js */"./resources/js/app.js");


/***/ })

/******/ });