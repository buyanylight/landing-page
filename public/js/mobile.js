/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 3);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/mobile.js":
/*!********************************!*\
  !*** ./resources/js/mobile.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// require('./bootstrap');\n// $(window).scroll(function(){\n//     $('nav').toggleClass('bg-black', $(this).scrollTop() > 500);\n// });\n$(document).ready(function () {\n  $(window).scroll(function () {\n    if ($(this).scrollTop() > 550) {\n      $('#topBtn').fadeIn();\n    } else {\n      $('#topBtn').fadeOut();\n    }\n  });\n  $(\"#topBtn\").click(function () {\n    $('html, body').animate({\n      scrollTop: 0\n    }, 800);\n  });\n});\njQuery(function ($) {\n  console.log(\"I am Working!\"); // for ie9 doesn't support debug console >>>\n\n  if (!window.console) window.console = {};\n  if (!window.console.log) window.console.log = function () {}; // ^^^\n\n  $.fn.euCookieLawPopup = function () {\n    var _self = this; ///////////////////////////////////////////////////////////////////////////////////////////////\n    // PARAMETERS (MODIFY THIS PART) //////////////////////////////////////////////////////////////\n\n\n    _self.params = {\n      cookiePolicyUrl: '/?privacy',\n      popupPosition: 'top',\n      colorStyle: 'default',\n      compactStyle: false,\n      popupTitle: 'This website is using cookies',\n      // popupText : 'We use cookies to ensure that we give you the best experience on our website. If you continue without changing your settings, we\\'ll assume that you are happy to receive all cookies on this website.',\n      popupText: 'We use cookies to offer you a better browsing experience, if you continue to use this site, you consent to our use of cookies.',\n      buttonContinueTitle: 'Continue',\n      buttonLearnmoreTitle: 'Learn&nbsp;more',\n      buttonLearnmoreOpenInNewWindow: true,\n      agreementExpiresInDays: 30,\n      autoAcceptCookiePolicy: false,\n      htmlMarkup: null\n    }; ///////////////////////////////////////////////////////////////////////////////////////////////\n    // VARIABLES USED BY THE FUNCTION (DON'T MODIFY THIS PART) ////////////////////////////////////\n\n    _self.vars = {\n      INITIALISED: false,\n      HTML_MARKUP: null,\n      COOKIE_NAME: 'EU_COOKIE_LAW_CONSENT'\n    }; ///////////////////////////////////////////////////////////////////////////////////////////////\n    // PRIVATE FUNCTIONS FOR MANIPULATING DATA ////////////////////////////////////////////////////\n    // Overwrite default parameters if any of those is present\n\n    var parseParameters = function parseParameters(object, markup, settings) {\n      if (object) {\n        var className = $(object).attr('class') ? $(object).attr('class') : '';\n\n        if (className.indexOf('eupopup-top') > -1) {\n          _self.params.popupPosition = 'top';\n        } else if (className.indexOf('eupopup-fixedtop') > -1) {\n          _self.params.popupPosition = 'fixedtop';\n        } else if (className.indexOf('eupopup-bottomright') > -1) {\n          _self.params.popupPosition = 'bottomright';\n        } else if (className.indexOf('eupopup-bottomleft') > -1) {\n          _self.params.popupPosition = 'bottomleft';\n        } else if (className.indexOf('eupopup-bottom') > -1) {\n          _self.params.popupPosition = 'bottom';\n        } else if (className.indexOf('eupopup-block') > -1) {\n          _self.params.popupPosition = 'block';\n        }\n\n        if (className.indexOf('eupopup-color-default') > -1) {\n          _self.params.colorStyle = 'default';\n        } else if (className.indexOf('eupopup-color-inverse') > -1) {\n          _self.params.colorStyle = 'inverse';\n        }\n\n        if (className.indexOf('eupopup-style-compact') > -1) {\n          _self.params.compactStyle = true;\n        }\n      }\n\n      if (markup) {\n        _self.params.htmlMarkup = markup;\n      }\n\n      if (settings) {\n        if (typeof settings.cookiePolicyUrl !== 'undefined') {\n          _self.params.cookiePolicyUrl = settings.cookiePolicyUrl;\n        }\n\n        if (typeof settings.popupPosition !== 'undefined') {\n          _self.params.popupPosition = settings.popupPosition;\n        }\n\n        if (typeof settings.colorStyle !== 'undefined') {\n          _self.params.colorStyle = settings.colorStyle;\n        }\n\n        if (typeof settings.popupTitle !== 'undefined') {\n          _self.params.popupTitle = settings.popupTitle;\n        }\n\n        if (typeof settings.popupText !== 'undefined') {\n          _self.params.popupText = settings.popupText;\n        }\n\n        if (typeof settings.buttonContinueTitle !== 'undefined') {\n          _self.params.buttonContinueTitle = settings.buttonContinueTitle;\n        }\n\n        if (typeof settings.buttonLearnmoreTitle !== 'undefined') {\n          _self.params.buttonLearnmoreTitle = settings.buttonLearnmoreTitle;\n        }\n\n        if (typeof settings.buttonLearnmoreOpenInNewWindow !== 'undefined') {\n          _self.params.buttonLearnmoreOpenInNewWindow = settings.buttonLearnmoreOpenInNewWindow;\n        }\n\n        if (typeof settings.agreementExpiresInDays !== 'undefined') {\n          _self.params.agreementExpiresInDays = settings.agreementExpiresInDays;\n        }\n\n        if (typeof settings.autoAcceptCookiePolicy !== 'undefined') {\n          _self.params.autoAcceptCookiePolicy = settings.autoAcceptCookiePolicy;\n        }\n\n        if (typeof settings.htmlMarkup !== 'undefined') {\n          _self.params.htmlMarkup = settings.htmlMarkup;\n        }\n      }\n    };\n\n    var createHtmlMarkup = function createHtmlMarkup() {\n      if (_self.params.htmlMarkup) {\n        return _self.params.htmlMarkup;\n      }\n\n      var html = '<div class=\"eupopup-container' + ' eupopup-container-' + _self.params.popupPosition + (_self.params.compactStyle ? ' eupopup-style-compact' : '') + ' eupopup-color-' + _self.params.colorStyle + '\">' + '<div class=\"eupopup-head\">' + _self.params.popupTitle + '</div>' + '<div class=\"eupopup-body\">' + _self.params.popupText + '</div>' + '<div class=\"eupopup-buttons\">' + '<a href=\"#\" class=\"eupopup-button eupopup-button_1\">' + _self.params.buttonContinueTitle + '</a>' + '<a href=\"' + _self.params.cookiePolicyUrl + '\"' + (_self.params.buttonLearnmoreOpenInNewWindow ? ' target=_blank ' : '') + ' class=\"eupopup-button eupopup-button_2\">' + _self.params.buttonLearnmoreTitle + '</a>' + '<div class=\"clearfix\"></div>' + '</div>' + '<a href=\"#\" class=\"eupopup-closebutton\">x</a>' + '</div>';\n      return html;\n    }; // Storing the consent in a cookie\n\n\n    var setUserAcceptsCookies = function setUserAcceptsCookies(consent) {\n      var d = new Date();\n      var expiresInDays = _self.params.agreementExpiresInDays * 24 * 60 * 60 * 1000;\n      d.setTime(d.getTime() + expiresInDays);\n      var expires = \"expires=\" + d.toGMTString();\n      document.cookie = _self.vars.COOKIE_NAME + '=' + consent + \"; \" + expires + \";path=/\";\n      $(document).trigger(\"user_cookie_consent_changed\", {\n        'consent': consent\n      });\n    }; // Let's see if we have a consent cookie already\n\n\n    var userAlreadyAcceptedCookies = function userAlreadyAcceptedCookies() {\n      var userAcceptedCookies = false;\n      var cookies = document.cookie.split(\";\");\n\n      for (var i = 0; i < cookies.length; i++) {\n        var c = cookies[i].trim();\n\n        if (c.indexOf(_self.vars.COOKIE_NAME) == 0) {\n          userAcceptedCookies = c.substring(_self.vars.COOKIE_NAME.length + 1, c.length);\n        }\n      }\n\n      return userAcceptedCookies;\n    };\n\n    var hideContainer = function hideContainer() {\n      // $('.eupopup-container').slideUp(200);\n      $('.eupopup-container').animate({\n        opacity: 0,\n        height: 0\n      }, 200, function () {\n        $('.eupopup-container').hide(0);\n      });\n    }; ///////////////////////////////////////////////////////////////////////////////////////////////\n    // PUBLIC FUNCTIONS  //////////////////////////////////////////////////////////////////////////\n\n\n    var publicfunc = {\n      // INITIALIZE EU COOKIE LAW POPUP /////////////////////////////////////////////////////////\n      init: function init(settings) {\n        parseParameters($(\".eupopup\").first(), $(\".eupopup-markup\").html(), settings); // No need to display this if user already accepted the policy\n\n        if (userAlreadyAcceptedCookies()) {\n          $(document).trigger(\"user_cookie_already_accepted\", {\n            'consent': true\n          });\n          return;\n        } // We should initialise only once\n\n\n        if (_self.vars.INITIALISED) {\n          return;\n        }\n\n        _self.vars.INITIALISED = true; // Markup and event listeners >>>\n\n        _self.vars.HTML_MARKUP = createHtmlMarkup();\n\n        if ($('.eupopup-block').length > 0) {\n          $('.eupopup-block').append(_self.vars.HTML_MARKUP);\n        } else {\n          $('BODY').append(_self.vars.HTML_MARKUP);\n        }\n\n        $('.eupopup-button_1').click(function () {\n          setUserAcceptsCookies(true);\n          hideContainer();\n          console.log('1');\n          return false;\n        });\n        $('.eupopup-closebutton').click(function () {\n          setUserAcceptsCookies(true);\n          hideContainer();\n          return false;\n        }); // ^^^ Markup and event listeners\n        // Ready to start!\n\n        $('.eupopup-container').show(); // In case it's alright to just display the message once\n\n        if (_self.params.autoAcceptCookiePolicy) {\n          setUserAcceptsCookies(true);\n        }\n      }\n    };\n    return publicfunc;\n  };\n}); // jQuery(function($) {\n\n$(document).ready(function () {\n  if ($(\".eupopup\").length > 0) {\n    $(document).euCookieLawPopup().init({\n      'info': 'YOU_CAN_ADD_MORE_SETTINGS_HERE',\n      'cookiePolicyUrl': '/privacy',\n      'popupTitle': '',\n      // 'popupText' : 'We use cookies to offer you a better browsing experience, analyze site traffic, personalize content.<br> Read about how we use cookies and how you can control them on our Privacy Policy. If you continue to use this site, you consent to our use of cookies.'\n      'popupText': 'We use cookies to offer you a better browsing experience. If you continue to use this site, you consent to our use of cookies.'\n    });\n  }\n});\n$(document).bind(\"user_cookie_consent_changed\", function (event, object) {\n  console.log(\"User cookie consent changed: \" + $(object).attr('consent'));\n}); // if contact is in url \n//////////////////////////////////////////////////////////////// \n\n$(document).ready(function () {\n  var anchors = window.location.href.split(\"#\");\n\n  if (anchors.length > 1 && (anchors[1] == 'footer' || anchors[1] == 'contact')) {\n    // console.log('anchors',anchors);\n    $('#contact').addClass('show'); // $('html, body').animate({scrollTop: 0}, 800);\n  }\n\n  $('.openContact').click(function () {\n    $('#contact').addClass('show');\n  });\n}); //////////////////////////////////////////////////////////////// \n// if contact is in url \n// navbar\n//////////////////////////////////////////////////////////////// \n\n$(document).ready(function () {\n  $('.navbar-nav>li>a').on('click', function () {\n    $('.navbar-collapse').collapse('hide');\n    $('.all-contents').removeClass('filter');\n  });\n  $('.navbar-nav>li>div>a').on('click', function () {\n    $('.navbar-collapse').collapse('hide');\n    $('.all-contents').removeClass('filter');\n  });\n  $('.navbar-toggler').click(function () {\n    $('.all-contents').toggleClass('filter');\n  }); // $('.hideNavbar').on('click',function() {\n  //   \t$('#navbarNavDropdown').collapse('hide');\n  // });\n\n  $('#mobileNavbar').click(function (evnt) {\n    // $('#navbarNavDropdown').collapse('hide');\n    if ($(evnt.target).attr('id') == 'navbarNavDropdown') {\n      $('.all-contents').toggleClass('filter');\n      $('#navbarNavDropdown').collapse('hide');\n    }\n  });\n}); //////////////////////////////////////////////////////////////// \n// navbar//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/mobile.js\n");

/***/ }),

/***/ 3:
/*!**************************************!*\
  !*** multi ./resources/js/mobile.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! G:\xampp-php7.2\htdocs\BAL-Landing_Page\resources\js\mobile.js */"./resources/js/mobile.js");


/***/ })

/******/ });